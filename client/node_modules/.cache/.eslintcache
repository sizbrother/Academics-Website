[{"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/index.js":"1","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/reportWebVitals.js":"2","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/App.js":"3","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Register.js":"4","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Signin.js":"5","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/MainNav.js":"6","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/Search.js":"7","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/ExpertPage.js":"8","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Admin.js":"9","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/RegisterExpertDetail.js":"10","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Home.js":"11","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/RegisterUserDetail.js":"12","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/ExpertEdit.js":"13","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CategoryBox3.js":"14","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CategoryBox2.js":"15","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/WebImage.js":"16","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CatagoryBox.js":"17"},{"size":535,"mtime":1670862343865,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1670862343869,"results":"20","hashOfConfig":"19"},{"size":6817,"mtime":1670862343862,"results":"21","hashOfConfig":"19"},{"size":2177,"mtime":1670862343867,"results":"22","hashOfConfig":"19"},{"size":4432,"mtime":1670862343868,"results":"23","hashOfConfig":"19"},{"size":800,"mtime":1670862343863,"results":"24","hashOfConfig":"19"},{"size":2401,"mtime":1670862343864,"results":"25","hashOfConfig":"19"},{"size":3579,"mtime":1670862343866,"results":"26","hashOfConfig":"19"},{"size":16143,"mtime":1670862343866,"results":"27","hashOfConfig":"19"},{"size":22321,"mtime":1670862343867,"results":"28","hashOfConfig":"19"},{"size":2298,"mtime":1670862343867,"results":"29","hashOfConfig":"19"},{"size":14745,"mtime":1670862343867,"results":"30","hashOfConfig":"19"},{"size":24889,"mtime":1670952888570,"results":"31","hashOfConfig":"19"},{"size":3064,"mtime":1670862343863,"results":"32","hashOfConfig":"19"},{"size":1942,"mtime":1670862343863,"results":"33","hashOfConfig":"19"},{"size":117,"mtime":1670862343864,"results":"34","hashOfConfig":"19"},{"size":949,"mtime":1670862343863,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17x6x6d",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/index.js",[],[],"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/reportWebVitals.js",[],[],"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/App.js",["98","99"],[],"import { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Signin from \"./pages/Signin.js\";\nimport Admin from \"./pages/Admin.js\";\nimport Expert from \"./pages/RegisterExpertDetail\";\nimport User from \"./pages/RegisterUserDetail\";\nimport ExpEdit from \"./pages/ExpertEdit\";\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport Box from '@mui/material/Box';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PersonSharpIcon from '@mui/icons-material/PersonSharp';\nimport ExpertPage from \"./pages/ExpertPage.js\";\n\n\nfunction App() {\n  // Stores backend data in backen var\n  const [backend, setBackendData] = useState([{}])\n\n  useEffect (() => {\n    // Fetches the data as an array of bytes and converts to strea\n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts\").then((response) => {\n      const body = response.body\n      const reader = body.getReader();\n      \n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          async function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(({ done, value }) => {\n              // If there is no more data to read\n              if (done) {\n                controller.close();\n                return;\n              }\n              // Get the data and send it to the browser via the controller\n              controller.enqueue(value);\n              push();\n            });\n          }\n  \n          push();\n        },\n      })\n      \n    }).then((stream) => {\n      // Converts stream into string\n      return new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n    }).then((result) => {\n      // Parses string and conversts to data map object\n      const dataMap = JSON.parse(result);\n      setBackendData(dataMap)\n    })\n  }, [])\n\n\n  const [backendForUnconfirmed, setBackendDataForUnconfirmed] = useState([{}])\n\n\n  useEffect (() => {\n    // Fetches the data as an array of bytes and converts to strea\n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/UnconfirmedExperts\").then((response) => {\n      const body = response.body\n      const reader = body.getReader();\n      \n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          async function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(({ done, value }) => {\n              // If there is no more data to read\n              if (done) {\n                controller.close();\n                return;\n              }\n              // Get the data and send it to the browser via the controller\n              controller.enqueue(value);\n              push();\n            });\n          }\n  \n          push();\n        },\n      })\n      \n    }).then((stream) => {\n      // Converts stream into string\n      return new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n    }).then((result) => {\n      // Parses string and conversts to data map object\n      const dataMap = JSON.parse(result);\n      setBackendDataForUnconfirmed(dataMap)\n    })\n  }, [])\n\n  const [userbackend, setuserBackendData] = useState([{}])\n\n  useEffect (() => {\n    // Fetches the data as an array of bytes and converts to strea\n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Users\").then((response) => {\n      const body = response.body\n      const reader = body.getReader();\n\n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          async function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(({ done, value }) => {\n              // If there is no more data to read\n              if (done) {\n                controller.close();\n                return;\n              }\n              // Get the data and send it to the browser via the controller\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        },\n      })\n\n    }).then((stream) => {\n      // Converts stream into string\n      return new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n    }).then((result) => {\n      // Parses string and conversts to data map object\n      const dataMap = JSON.parse(result);\n      setuserBackendData(dataMap)\n    })\n  }, [])\n\n  console.log(userbackend)\n  return (\n\n    <Box sx ={{height:1,width:1}}>\n      \n\n\n      {(typeof(backend) === 'undefined') ?\n      (\n        <p>Loading...</p>\n      ):\n      (\n        <Router>\n        <Fragment>\n          <MainNavigation/>\n          <Routes>\n            <Route exact path='/' element={<Home/>}>\n              {/* <Route exact path='/' element={<Home/>}/> */}\n            </Route>\n            <Route exact path='/search' element={<Search details={backend}/>}/>\n            {/* <Route exact path='/login' element={<Login/>}/> */}\n            <Route exact path='/register' element={<Register/>}/>\n            <Route exact path='/signin' element={<Signin/>}/>\n            <Route exact path='/admin/newell/742000/12252000' element={<Admin details = {backend} detailsOfUnconfirmed = {backendForUnconfirmed} users = {userbackend}/>}/>\n            <Route exact path='/registerexpertdetail' element={<Expert/>}/>\n            <Route exact path='/expertedit' element={<ExpEdit/>}/>\n            <Route exact path='/registeruserdetail' element={<User/>}/>\n            <Route exact path='/expertpage/:id' element={<ExpertPage/>}/>\n\n          \n          </Routes>\n        </Fragment>\n      </Router>\n      )}\n\n    <Paper elevation={24}>\n    \n        <BottomNavigation showLabels sx={{ width: 1, height :200, bgcolor:\"#194D33\" }}>\n          \n          <BottomNavigationAction label = \"womenmormonstudies@gmail.com\" sx={{ color: \"white\" }} icon ={<EmailIcon sx={{padding: '5%'}}/>}></BottomNavigationAction>\n\n            <BottomNavigationAction href= \"https://twitter.com/WomeninMoStud\" sx={{ color: \"white\" }} label=\"Our Twitter\" icon = {<TwitterIcon sx={{padding: '5%'}}/>}/>\n            <BottomNavigationAction href = \"https://www.facebook.com/womenmormonstudies/\" sx={{ color: \"white\" }} label=\"Our Facebook\" icon = {<FacebookIcon sx={{padding: '5%'}}/>}/>\n          </BottomNavigation>\n          </Paper>\n    </Box>\n    \n  )\n\n\n}\n\nexport default App;","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Register.js",["100"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport WebImage from '../componenet/WebImage';\nimport { useNavigate } from \"react-router-dom\";\nimport { Email } from '@mui/icons-material';\n\n\n\nconst theme = createTheme({palette:\n    {\n        primary:{main:\"#008000\"},\n        // secondary:{main:\"yellow\"}\n    },\n});\n\nexport default function Register() {\n\n    let navigate = useNavigate(); \n    const routeExpertChange = () =>{ \n    let path = \"../registerexpertdetail\"; \n    navigate(path);\n    }\n\n    const routeUserChange = () =>{ \n      let path = \"../registeruserdetail\"; \n      navigate(path);\n      }\n\n\n    \n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        \n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: 650\n          }}\n        >\n          \n          <Typography component=\"h1\" variant=\"h5\">\n          <WebImage alt=\"a decorative tree\"/>\n          </Typography>\n\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n\n\n            <Button\n              //if (userType == )\n              onClick={routeExpertChange}\n              //onClick={routeExpertChange}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white', marginTop: \"25%\"}}\n            >\n              Register As An Expert\n            </Button>\n\n            <Button\n              //if (userType == )\n              onClick={routeUserChange}\n              \n              //onClick={routeExpertChange}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white'}}\n            >\n              Register As A User\n            </Button>\n            \n\n            \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Signin.js",["101","102","103","104","105","106","107"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport WebImage from '../componenet/WebImage';\nimport { useNavigate } from \"react-router-dom\";\nimport emailjs from '@emailjs/browser';\n\nconst theme = createTheme({palette:\n    {\n        primary:{main:\"#008000\"},\n        // secondary:{main:\"yellow\"}\n    },\n});\n\nexport default function Signin() {\n  const form = React.useRef()\n\n  let navigate = useNavigate(); \n\n  const show_user = (id)=> {\n    \n    let path = \"../expertpage/\" + id; \n    navigate(path);\n  };\n  let request = 0;\n  const date = new Date;\n    // supposed to send get to move based on email\n    \n\n  const handleSubmit = (e)=>{\n    let email = form.current.email.value;\n    let password = form.current.password.value;\n    \n    const requestOptions = { \n      method:'GET',\n      \n    }; \n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts/\", requestOptions)\n    .then((response)=> {\n      return response.json();\n    }).then((result) => {\n      let found = false;\n\n      Object.keys(result).forEach(function(key) {\n        if (result[key].email == email && result[key].password == password){\n          found = true\n          if (result[key].email == \"qnewell@hamilton.edu\"){\n            let path = \"../admin/newell/742000/12252000\"; \n            navigate(path);\n          }\n          else{\n          let id = result[key]._id\n          show_user(id)\n        }}\n      })\n      if (!found){\n        alert(\"Email and password not found, try again\")\n      }\n    })\n  }\n  \n  const handleForgotPassword= (e) =>{\n \n    const requestOptions = { \n      method:'GET',\n      \n    }; \n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts/\", requestOptions)\n    .then((response)=> {\n      return response.json();\n    }).then((result) => {\n\n      const email = form.current.email.value;\n      var found = false;\n      var password;\n      let myJSON = {\"email\": form.current.email.value, \"password\": null}\n\n\n      Object.keys(result).forEach(function(key) {\n        if (result[key].email == email)\n        {\n          found = true\n          password = result[key].password\n          myJSON[\"password\"] = password\n        }\n        \n      })\n      if (!found){\n        alert(\"Couldn't find your email. Input your email, fix the typo, or register as an expert!\")\n      }\n      else\n      {\n        emailjs.send('service_owv6uf2','password_remember', myJSON, 'p0uNpijVQNgR4VtYC')\n        \n        alert(\"Your password was sent to your email\")\n      }\n    })\n  }\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n          <WebImage alt=\"a decorative tree\"/>\n          </Typography>\n          <Box component=\"form\" ref = {form} onSubmit = {handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n                onClick={handleSubmit}\n              // type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white'}}\n            >\n              Sign In\n            </Button>\n\n            <Button\n                onClick={handleForgotPassword}\n              // type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white'}}\n            >\n              Forgot My Password\n            </Button>\n            \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/MainNav.js",[],[],"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/Search.js",[],[],"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/ExpertPage.js",["108","109","110","111","112"],[],"import * as React from 'react';\nimport {Box, Button,List, Link, ListItem, Paper} from '@mui/material';\nimport { json, useParams } from 'react-router-dom';\n\n\n\nexport default function ExpertPage(){\n    let {id} = useParams();\n\n    let [current_user, handleuser] = React.useState(id);\n\n\n    let user;\n        let found = false;\n\n        const requestOptions = { \n          method:'GET',\n          \n        }; \n        fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts/\", requestOptions)\n        .then((response)=> {\n          return response.json();\n        }).then((result) => {\n          Object.keys(result).forEach(function(key) {\n            if (result[key]._id == id)\n            {\n                let new_object = result[key];\n                found = true\n                user = JSON.stringify(new_object)\n                handleuser(user)\n            }\n          })\n        })\n        let myJSON;\n        if (current_user != id){\n             myJSON = JSON.parse(current_user)\n\n        }\n\n    return(\n        <div >\n            {(!myJSON) ?\n      (\n        <div>Loading...</div>\n      ):\n        <Box  sx ={{width:1, height:700, bgcolor: \"#9EB0A7\",display: 'flex'}}>\n                <List sx={{margin: 2, width: 1/2, maxWidth: 500, height: 1/2, maxHeight: 200}}>\n                <Paper elevation={6}>\n                    <ListItem sx= {{ fontWeight: 'bold' }}> About Me </ListItem>\n\n                    <ListItem>Personal: {myJSON.first_name} {myJSON.middle_initial} {myJSON.last_name} </ListItem>\n                    <ListItem>Email: {myJSON.email} </ListItem>\n                    <ListItem>{myJSON.degree} </ListItem>\n\n                    <ListItem>Media Availability: {myJSON.media_availability}</ListItem>\n                    <ListItem> {myJSON.city} {myJSON.satte} {myJSON.country}</ListItem>\n\n                    {(myJSON.website)? (\n                      \n                    // <ListItem> <Button sx = {{outline_width: \"1px\", outline_color: \"black\"}} href = {myJSON.website}> {myJSON.website}</Button> </ListItem>\n                    <ListItem>{myJSON.website}</ListItem>\n\n                        ):\n                        <p></p>\n                        }\n\n\n                    </Paper>\n                </List> \n\n            <List sx={{margin: 2, width: 1/2, maxWidth: 500, height: 1/2, maxHeight: 200}}>\n                <Paper elevation={6}>\n                    <ListItem sx= {{ fontWeight: 'bold' }}> Areas of Expertise </ListItem>\n                    <ListItem>{myJSON.discipline} </ListItem>\n                    <ListItem>{myJSON.time_period} </ListItem>\n                    <ListItem>{myJSON.geographic_areas} </ListItem>\n                    <ListItem>Methods: {myJSON.methods_approaches} </ListItem>\n\n                    <ListItem>{myJSON.institutional_affiliation} </ListItem>\n\n                    <ListItem>Keywords: {myJSON.keywords} </ListItem>\n\n                    </Paper>\n                </List>            \n            <List sx={{margin: 2, width: 1/2, maxWidth: 500, height: 1/2, maxHeight: 200}}>\n                <Paper elevation={6}>\n                <ListItem sx= {{ fontWeight: 'bold' }}>Biography: </ListItem>\n\n                <ListItem>{myJSON.biographical_sketch}</ListItem>\n\n\n                    </Paper>\n                </List>   \n                 \n        <Button href = \"/expertedit\"sx ={{color: \"green\",fontWeight: \"bold\", height: 1/2, width:1/2, maxHeight: 100, maxWidth: 200, bgcolor:\"white\", border:2, border_color: \"black\", mt: \"30%\"}}>Edit my Page</Button>\n        </Box>\n            \n        }\n        </div>\n    )\n\n}","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Admin.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],[],"import * as React from 'react';\n\nimport { DataGrid} from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\nimport { useNavigate } from \"react-router-dom\";\nimport { useSearchParams } from 'react-router-dom';\nimport emailjs from '@emailjs/browser'\n\n\nexport default function Admin({details, detailsOfUnconfirmed, users}){\n\n\n    for (let i=0;i<details.length;i++){\n        details[i][\"id\"]= i+1\n    }\n    for (let i=0;i<detailsOfUnconfirmed.length;i++){\n      detailsOfUnconfirmed[i][\"id\"]= i+1\n  }\n\n    // Botton to remove experts \n    // need delete request\n    let navigate = useNavigate(); \n\n\n    const show_user = (selected_user)=> {\n      const id = selected_user._id\n      \n      let path = \"../expertpage/\" + id; \n      navigate(path);\n    };\n\n\n    const see_unconfirmed =(selected)=>{\n  \n\n    \n\n        //alert(JSON.stringify(selected, null, 4));\n          \n        // New Tab Window\n        var myWindow = window.open(\"\", \"_blank\");\n    \n        // Popup Window\n        //var myWindow = window.open('/', 'example', \"weight=100,height=100\");\n    \n        // Basic Information\n        myWindow.document.write(\"Name: \" + selected.first_name + \" \" + selected.last_name);\n        myWindow.document.write(\"<br>Email: \" + selected.email);\n    \n        if (selected.categories_of_difference != \"\") {\n          myWindow.document.write(\"<br>Categoties of Difference: \" + selected.categories_of_difference);\n        }\n    \n        if (selected.categories_of_difference != \"\") {\n          myWindow.document.write(\"<br>Geographic Areas: \" + selected.geographic_areas);\n        }\n    \n        if (selected.discipline != \"\") {\n        myWindow.document.write(\"<br>Discipline: \" + selected.discipline + '<br>');\n        }\n    \n        // Location Specifications\n        if (selected.city != \"\") {\n           myWindow.document.write(\"<br>City: \" + selected.city);\n        } if (selected.state != \"\") {\n          myWindow.document.write(\"<br>State: \" + selected.state);\n        } if (selected.country != \"\") {\n          myWindow.document.write(\"<br>Country: \" + selected.country);\n        }\n    \n        // Expert Bio\n        if (selected.biographical_sketch != \"\") {\n          myWindow.document.write(\"<br><br>Biographical Sketch: \" + selected.biographical_sketch);\n        }\n        if (selected.twitter_intagram_other_social_media != \"\") {\n          myWindow.document.write(\"<br>Social Media: \" + selected.twitter_intagram_other_social_media);\n        } if (selected.media_availability != \"\") {\n          myWindow.document.write(\"<br>Media Availability: \" + selected.media_availability);\n        }\n    \n        if (selected.title != \"\") {\n          myWindow.document.write(\"<br>Title: \" + selected.title);\n        }\n        if (selected.institutional_affiliation != \"\") {\n          myWindow.document.write(\"<br>Institutional Affiliation: \" + selected.institutional_affiliation);\n        }\n    \n        \n      \n      };\n    \n\n      \n  const onButtonClickDeleteExpert = (event, userObject)=>{\n    const requestOptions = { \n      method:'DELETE'\n    }; \n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts/\" + userObject._id, requestOptions)\n    .then((response)=> {\n      alert(\"Expert Deleted\")\n\n      return response.json();\n    }).then((result) => {\n      console.log(result);\n    })\n  }\n  \n    const change = (event, userObject)=>{\n      onButtonClickUnconfirmedDelete(event,userObject)\n     \n      onButtonClickUnconfirmedAdd(event, userObject)\n      alert(\"Expert Moved\")\n    }\n      \n    \n    // Button to add unconfirmed experts -> experts \n    // need post request\n    // used to remove users from db in Experts\n   \n\n    const onButtonClickUnconfirmedAdd = (event, userObject)=>{\n      var deletedID = structuredClone(userObject)\n      delete deletedID._id\n\n      const requestOptions = { \n        method:'POST',\n        body: JSON.stringify(deletedID),\n        headers: {\n          'Content-Type': 'application/json'\n      },\n      }; \n      fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Experts/\", requestOptions)\n      .then((response)=> {\n        alert(\"User added to Experts\")\n        return response.json();\n      }).then((result) => {\n        console.log(result);\n      })\n          //notifying people with saved searches\n          function containsObject(dict, expert) {\n            var i;\n            var locations;\n            var periods;\n            var methods;\n            var topics;\n            var extras;\n            const itemsFound = []\n            for (i = 0; i < expert.length; i++) {\n              for(locations = 0; locations < dict[\"locations\"].length; locations ++) {\n                if (expert[i] == dict[\"locations\"][locations]) {\n                    itemsFound.push(dict[\"locations\"][locations])\n                }\n              }\n              for(periods = 0; periods < dict[\"periods\"].length; periods ++) {\n                if (expert[i] == dict[\"periods\"][periods]) {\n                    itemsFound.push(dict[\"periods\"][periods])\n                }\n              }\n              for(methods = 0; methods < dict[\"methods\"].length; methods ++) {\n                if (expert[i] == dict[\"methods\"][methods]) {\n                    itemsFound.push(dict[\"methods\"][methods])\n                }\n              }\n              for(topics = 0; topics < dict[\"topics\"].length; topics ++) {\n                if (expert[i] == dict[\"topics\"][topics]) {\n                    itemsFound.push(dict[\"topics\"][topics])\n                }\n              }\n              for(extras = 0; extras < dict[\"extras\"].length; extras ++) {\n                if (expert[i] == dict[\"extras\"][extras]) {\n                    itemsFound.push(dict[\"extras\"][extras])\n                }\n              }\n            }\n            return itemsFound;\n          }\n          //putting all expert fields into an array\n          function getExpertFields(expertJSON) {\n            const expert = [];\n            const bibliography = expertJSON[\"bibliography\"]\n            if(typeof bibliography !== \"undefined\") {\n              const split_bibliography = bibliography.split(' ')\n              var bib;\n              for (bib = 0; bib < split_bibliography.length; bib ++) {\n                expert.push(split_bibliography[bib])\n              }\n            }\n            const broad_areas = expertJSON[\"broad_areas\"]\n            if(typeof broad_areas !== \"undefined\") {\n              const split_broad_areas = broad_areas.split(' ')\n              var broad;\n              for (broad = 0; broad < split_broad_areas.length; broad ++) {\n                expert.push(split_broad_areas[broad])\n              }\n            }\n            expert.push(broad_areas);\n            const city = expertJSON[\"city\"];\n            expert.push(city);\n            const country = expertJSON[\"country\"];\n            expert.push(country)\n            const discipline = expertJSON[\"discipline\"]\n            if(typeof discipline !== \"undefined\") {\n              const split_discipline = discipline.split(' ')\n              var disc;\n              for (disc = 0; disc < split_discipline.length; disc ++) {\n                expert.push(split_discipline[disc])\n              }\n            }\n            expert.push(discipline)\n            const institutional_affiliation = expertJSON[\"institutional_affiliation\"];\n            expert.push(institutional_affiliation);\n            const keywords = expertJSON[\"keywords\"]\n            if(typeof keywords !== \"undefined\") {\n              const split_keywords = keywords.split(' ')\n              var key;\n              for (key = 0; key < split_keywords.length; key ++) {\n                expert.push(split_keywords[key])\n              }\n            }\n            expert.push(keywords);\n            const state = expertJSON[\"state\"];\n            expert.push(state);\n            //these are lists\n            const geographic_areas = expertJSON[\"geographic_areas\"];\n            if(typeof geographic_areas !== \"undefined\") {\n              var area;\n              for (area = 0; area < geographic_areas.length; area ++) {\n                expert.push(geographic_areas[area])\n              }\n            }\n            const categories_of_difference = expertJSON[\"categories_of_difference\"];\n            if(typeof categories_of_difference !== \"undefined\") {\n              var cat;\n              for (cat = 0; cat < categories_of_difference.length; cat ++) {\n                const split_cats = categories_of_difference[cat].split(' ');\n                var split_cat;\n                for (split_cat = 0; split_cat < split_cats.length; split_cat ++) {\n                  expert.push(split_cats[split_cat])\n                }\n              }\n            }\n            const methods_approaches = expertJSON[\"broad_areas\"];\n            if(typeof methods_approaches !== \"undefined\") {\n              var meth;\n              for (meth = 0; meth < methods_approaches.length; meth ++) {\n                expert.push(methods_approaches[meth])\n              }\n            }\n            const time_period = expertJSON[\"time_period\"];\n            if(typeof time_period !== \"undefined\") {\n              var time;\n              for (time = 0; time < time_period.length; time ++) {\n                expert.push(time_period[time])\n              }\n            }\n            return expert\n          }\n          Object.keys(users).forEach(function(user) {\n                  //console.log(searchList)\n                  var savedSearches = {}\n                  const savedLocations = []\n                  //for (i = 0; i < users[user].searches.location.length; i++){\n                  users[user].searches.location.forEach(function(curLocation) {\n                    savedLocations.push(curLocation)\n                  })\n                  savedSearches[\"locations\"] = savedLocations\n                  const savedPeriods = []\n                  users[user].searches.time.forEach(function(periods) {\n                    savedPeriods.push(periods)\n                  })\n                  savedSearches['periods'] = savedPeriods\n                  const savedMethods =[]\n                  users[user].searches.method.forEach(function(methods) {\n                    savedMethods.push(methods)\n                  })\n                  savedSearches['methods'] = savedMethods\n                  const savedTopics = []\n                  users[user].searches.topic.forEach(function(topics) {\n                    savedTopics.push(topics)\n                  })\n                  savedSearches['topics'] = savedTopics\n                  var savedExtras = []\n                  savedExtras = users[user].searches.extra.split(\", \")\n                  savedSearches['extras'] = savedExtras\n                  const expertFields = getExpertFields(deletedID)\n                  const sharedInterests = containsObject(savedSearches, expertFields)\n                  if (sharedInterests.length > 0) {\n                    var i;\n                    var sharedInterestsStr = \" \";\n                    for (i = 0; i < sharedInterests.length; i ++) {\n                      sharedInterestsStr = sharedInterestsStr + \" \" + sharedInterests[i]\n                    }\n                    const expert_name = deletedID['first_name'] + \" \" + deletedID['last_name']\n                    const email_name = users[user].email\n                    let myJSON = {\"email\": email_name,\"shared_interests\": sharedInterestsStr, \"expert\": expert_name}\n                    emailjs.send('service_0vgsvuo','template_zabqelj', myJSON, 'jdhmjHsn2vBjeCzSG')\n                      .then(result =>{\n                        console.log(result.text);\n                      },(error) => {\n                        console.log(error.text);\n                      }\n                    )\n                  }\n            })\n      }\n    // Button to remove experts \n    // need delete request\n    // row is the object of the user \n    const onButtonClickUnconfirmedDelete = (event, userObject)=>{\n      alert(\"Denied!\")\n      const requestOptions = { \n        method:'DELETE'\n      }; \n      fetch(\"https://womenmormonstudies-server.herokuapp.com/api/UnconfirmedExperts/\" + userObject._id, requestOptions)\n      .then((response)=> {\n        \n        return response.json();\n      }).then((result) => {\n        console.log(result);\n      })\n    }\n    \n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'first_name',\n          headerName: 'First name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'last_name',\n          headerName: 'Last name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'email',\n          headerName: 'email',\n          type: 'Email',\n          width: 110,\n          editable: true,\n        },\n        {\n          field: 'remove?',\n          headerName: 'remove',\n          renderCell: (params)=>{\n            return (\n            <Button\n            type = 'submit'\n\n              onClick={(e) => onButtonClickDeleteExpert(e, params.row)}\n              variant=\"contained\"\n            >\n              Delete\n            </Button>)\n            }\n        },\n        {\n          field: 'View?',\n          headerName: 'View',\n          renderCell: (params)=>{\n            return (\n            <Button\n\n              onClick={(e) => show_user(params.row)}\n              variant=\"contained\"\n            >\n              View\n            </Button>)\n            }\n        },\n        \n      ];\n      const columns2 = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'first_name',\n          headerName: 'First name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'last_name',\n          headerName: 'Last name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'email',\n          headerName: 'email',\n          type: 'Email',\n          width: 110,\n          editable: true,\n        },\n        {\n          field: 'Add?',\n          headerName: 'Edit',\n          renderCell: (params)=>{\n            return (\n            <Button\n            type = 'submit'\n\n              onClick={(e) => change(e, params.row)}\n              variant=\"contained\"\n              \n            >\n              \n              Add\n            </Button>)\n            }\n        },\n        {\n          field: 'Deny?',\n          headerName: 'Deny',\n          renderCell: (params)=>{\n            return (\n            <Button\n            type = 'submit'\n              onClick={(e) => onButtonClickUnconfirmedDelete(e, params.row)}\n              variant=\"contained\"\n            >\n              Deny\n            </Button>)\n            }\n        },\n        \n        {\n          field: 'View?',\n          headerName: 'View',\n          renderCell: (params)=>{\n            return (\n            <Button\n            onClick={(e) => see_unconfirmed(params.row)}\n            variant=\"contained\"\n            >\n              View\n            </Button>)\n            }\n        },\n        \n      ];\n    \n    return (\n      <div style={{ height: 650, width: '100%',  }}>\n          <div style={{ height: 500, width: '40%', float:'left', display:'inline', marginLeft:'30px'  }}>\n            <p>Current Experts</p>\n          {(typeof(details) === 'undefined') ?\n      (\n        <div>Loading...</div>\n      ):\n      (\n            <DataGrid \n            rows={details}\n            columns={columns}\n            rowsPerPageOptions={[5,10,25,50,100]}\n            checkboxSelection = {false}\n            disableSelectionOnClick\n\n            ></DataGrid>\n      )}\n        </div>\n        <div style={{ height: 500, width: '50%', float:'left', display:'inline', marginLeft: '30px' }}>\n        <p>Experts looking to Register</p>\n\n          {(typeof(details) === 'undefined') ?\n      (\n        <p>Loading...</p>\n      ):\n      (\n            <DataGrid \n            rows={detailsOfUnconfirmed}\n            columns={columns2}\n            rowsPerPageOptions={[5,10,25,50,100]}\n            checkboxSelection = {false}\n            disableSelectionOnClick\n            \n            ></DataGrid>\n      )}\n        </div>\n        </div>\n    )\n}\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/RegisterExpertDetail.js",["130","131","132","133","134","135","136"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport WebImage from '../componenet/WebImage';\nimport MenuItem from '@mui/material/MenuItem';\nimport validator from 'validator'\nimport { useState } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport Chip from '@mui/material/Chip';\nimport classes from './RegisterExpertDetail.module.css'\nimport emailjs from '@emailjs/browser'\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst categories_of_differences = [\n  'I am a person of color',\n  'I am LGBTQ+',\n  'I am a person with a disability',\n  'I am a neurodiverse person',\n  'I am a military veteran',\n  'I am a first-generation college student/graduate',\n  'Other (please specify)',\n];\n\n\nfunction getStyles(category, personCategory, theme) {\n  return {\n    fontWeight:\n      personCategory.indexOf(category) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles2(location, personLocation, theme) {\n  return {\n    fontWeight:\n      personLocation.indexOf(location) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles3(time, personTimePeriod, theme) {\n  return {\n    fontWeight:\n      personTimePeriod.indexOf(time) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles4(time, personTimePeriod, theme) {\n  return {\n    fontWeight:\n      personTimePeriod.indexOf(time) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst locations = [\n  'Asia',\n  'Australia and/or New Zealand',\n  'Pacific Islands',\n  'Europe',\n  'United States and/or Canada',\n  'Latin America and/or Caribbean',\n  'Middle East',\n  'N/A',\n];\n\nconst periods = [\n  '19th Century',\n  '20th Century',\n  '21st Century',\n  'N/A',\n];\n\nconst degrees = [\n  {\n    value: 'No advanced degree related to Mormon Studies',\n    label: 'No advanced degree related to Mormon Studies',\n  },\n  {\n    value: 'BA',\n    label: 'BA',\n  },\n  {\n    value: 'BS',\n    label: 'BS',\n  },\n  {\n    value: 'MA',\n    label: 'MA',\n  },\n  {\n    value: 'MTS',\n    label: 'MTS',\n  },\n  {\n    value: 'MDiv',\n    label: 'MDiv',\n  },\n  {\n    value: 'MEd',\n    label: 'MEd',\n  },\n  {\n    value: 'MSW',\n    label: 'MSW',\n  },\n  {\n    value: 'JD',\n    label: 'JD',\n  },\n  {\n    value: 'ABD',\n    label: 'ABD',\n  },\n  {\n    value: 'PhD',\n    label: 'PhD',\n  },\n  {\n    value: 'ThD',\n    label: 'ThD',\n  },\n  {\n    value: 'EdD',\n    label: 'EdD',\n  },\n];\n\nconst medias = [\n  {\n    value: 'Yes',\n    label: 'Yes',\n  },\n  {\n    value: 'No',\n    label: 'No',\n  },\n \n];\n\nconst methods = [\n  'Anthropology',\n  'Area Studies',\n  'Art History',\n  'Creative Writing',\n  'Disability Studies',\n  'Economics',\n  'Ethnography',\n  'Ethnohistory',\n  'Gender Studies',\n  'Genealogy',\n  'Geography',\n  'History',\n  'Linguistics',\n  'Literary Criticism',\n  'Oral History',\n  'Performance Studies',\n  'Philosophy',\n  'Political Science',\n  'Psychology',\n  'Public History',\n  'Religious Studies',\n  'Rhetoric/Communication',\n  'Sociology',\n  'Statistics',\n  'Theology',\n  'N/A',\n];\n\nconst topics = [\n  'Aesthetics',\n  'Anti-Mormonism',\n  'Biography',\n  'Childhood/Youth',\n  'Church Membership',\n  'Church of Jesus Christ of Latter-day Saints',\n  'Colonialism/imperialism',\n  'Community of Christ (formerly Reorganized Church of Jesus Christ of Latter Day Saints)',\n  'Critical Race Studies',\n  'Creative Writing (Fiction/Nonfiction/Poetry/etc.)',\n  'Cultural History',\n  'Demography',\n  'Disability Studies',\n  'Drama',\n  'Ecclesiology',\n  'Economics',\n  'Ethics',\n  'Family structure',\n  'Film',\n  'Folklore/Storytelling',\n  'Food',\n  'Gender/Femininity/Masculinity/Sexuality',\n  'Globalization',\n  'Healing',\n  'Interfaith/Interreligious Relations/Dialogue',\n  'Literature',\n  'Material Culture',\n  'Missions/Missiology',\n  'Motherhood',\n  'Music',\n  'Other Mormon Traditions (AUB/Bickertonite/FLDS/Strangite/etc.)',\n  'Performance',\n  'Philosophy',\n  'Psychology',\n  'Politics/Political Issues/Political Engagement',\n  'Popular Culture',\n  'Race/Ethnicity',\n  'Ritual Studies',\n  'Sacred Space',\n  'Scripture',\n  'Social History',\n  'Social Justice',\n  'Sociology of Religion',\n  'Technical Communication',\n  'Temples',\n  'Theology',\n  'Translation',\n  'Visual Culture',\n  'Womens History',\n  'N/A',\n];\n\n function RegisterExpertDetail() {\n  const form = React.useRef()\n\n  const handleSubmit = (event) => {\n    // emailjs.sendForm('service_owv6uf2','newell_email', form.current, 'p0uNpijVQNgR4VtYC')\n    //   .then(result =>{\n    //     console.log(result.text);\n    //   },(error) => {\n    //     console.log(error.text);\n    //   }\n    //   )\n    console.log(myJSON)\n\n    const requestOptions = { \n      method:'POST',\n      body: JSON.stringify(myJSON),\n      headers: {\n        'Content-Type': 'application/json'\n    },\n    }; \n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/UnconfirmedExperts/\", requestOptions)\n    .then((response)=> {\n      return response.json();\n    }).then((result) => {\n      //console.log(result);\n    })\n  };\n\n    const [firstName, setFirstName] = React.useState();\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    };\n\n    const [middleName, setMiddleName] = React.useState();\n\n    const handleMiddleNameChange = (event) => {\n      setMiddleName(event.target.value);\n    };\n\n    const [lastName, setLastName] = React.useState();\n\n    const handleLastNameChange = (event) => {\n      setLastName(event.target.value);\n    };\n\n    const [email, setEmail] = React.useState();\n\n    const handleEmailChange = (event) => {\n      setEmail(event.target.value);\n    };\n\n    const [title, setTitle] = React.useState();\n\n    const handleTitleChange = (event) => {\n      setTitle(event.target.value);\n    };\n\n    const [institution, setInstitution] = React.useState();\n\n    const handleInstitutionChange = (event) => {\n      setInstitution(event.target.value);\n    };\n\n    const [city, setCity] = React.useState();\n\n    const handleCityChange = (event) => {\n      setCity(event.target.value);\n    };\n\n    const [country, setCountry] = React.useState();\n\n    const handleCountryChange = (event) => {\n      setCountry(event.target.value);\n    };\n\n    const [socialMedia, setSocialMedia] = React.useState();\n\n    const handleSocialMediaChange = (event) => {\n      setSocialMedia(event.target.value);\n    };\n\n    const [website, setWebsite] = React.useState();\n\n    const handleWebsiteChange = (event) => {\n      setWebsite(event.target.value);\n    };\n\n    const [degree, setDegree] = React.useState();\n\n    const handleDegreeChange = (event) => {\n      setDegree(event.target.value);\n    };\n\n    const [categoriesOfDifference, setCategoriesOfDifference] = React.useState();\n\n    const theme = useTheme();\n    const [personCategory, setPersonName] = React.useState([]);\n  \n    const handleCategoriesOfDifferenceChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonName(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setCategoriesOfDifference(event.target.value);\n    };\n\n    const [biography, setBiography] = React.useState();\n\n    const handleBiographyChange = (event) => {\n      setBiography(event.target.value);\n    };\n\n    const [location, setLocation] = React.useState();\n    const [personLocation, setPersonLocation] = React.useState([]);\n  \n    const handleLocationChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonLocation(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setLocation(event.target.value);\n    }; \n\n    const [method, setMethod] = React.useState();\n    const [personMethod, setPersonMethod] = React.useState([]);\n\n    const handleMethodChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonMethod(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setMethod(event.target.value);\n        };\n\n    const [discipline, setDiscipline] = React.useState();\n\n\n    const [topic, setTopic] = React.useState();\n    const [personTopic, setPersonTopic] = React.useState([]);\n\n    const handleTopicChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonTopic(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setTopic(event.target.value);\n    };\n\n    const [period, setPeriod] = React.useState();\n    const [personTimePeriod, setPersonTimePeriod] = React.useState([]);\n\n    const handlePeriodChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonTimePeriod(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setPeriod(event.target.value);\n    };\n\n    const [media, setMedia] = React.useState();\n\n    const handleMediaChange = (event) => {\n      setMedia(event.target.value);\n    };\n\n    const [errorMessage, setErrorMessage] = useState('')\n \n    const validate = (value) => {\n      if (validator.isStrongPassword(value, {\n        minLength: 8, minLowercase: 1,\n        minUppercase: 1, minNumbers: 1, minSymbols: 1\n      })) {\n        setErrorMessage('This is a strong password')\n      } else {\n        setErrorMessage('This is not a strong password')\n      }\n    }\n\n    const [state, setState] = React.useState();\n\n    const handleStateChange = (event) => {\n      setState(event.target.value);\n    };\n\n    const [password, setPassword] = React.useState();\n    const handlePasswordChange = (event) => {\n      console.log(password)\n      setPassword(event.target.value);\n      validate(event.target.value)\n    };\n\n    var myJSON = {\"approved\": \"No\", \"first_name\": firstName,\"bibliography\": \"N/A\", \"biographical_sketch\": biography, \"broad_areas\": 'N/A', \"categories_of_difference\": categoriesOfDifference,\n    \"city\": city, \"country\": country, \"date_recorded\": \"N/A\", \"date_updated\": \"N/A\", \"degree\": degree, \"discipline\": \"N/A\", \"email\": email, \n    \"geographic_areas\": location, \"id\": \"N/A\", \"institutional_affiliation\": institution, \"keywords\": \"N/A\", \"last_accessed\": \"N/A\", \"last_name\": lastName, \"last_update_user\": \"\",\n    \"media_availability\": media, \"methods_approaches\": method, \"middle_name_middle_initial\": middleName, \"state\": state, \"time_period\": period, \"title\": title, \n    \"twitter_instagram_other_social_media\": socialMedia, \"website\": website, \"password\": password}\n    console.log(myJSON)\n\n  return (\n    <ThemeProvider theme={theme}>\n\n     \n      <Typography component=\"h1\" variant=\"h5\" sx={{\n          marginTop: '10px', marginLeft: '38%'\n        }}>\n          <WebImage alt=\"a decorative tree\"/>\n          </Typography>\n         \n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n    >\n\n    <p className = {classes.text3}> \n    In order to register, please fill in the fields below. Feel free to enter N/A if a field doesn't apply. Once you hit register, a notification will be sent\n    to Professor Newell that you are looking for approval. You will be able to sign-in once approved. \n    </p>\n\n    <p className = {classes.text4}> \n    Notice: Clicking register will keep your information on the page but you will have registered. Don't hit register multiple times!\n    </p>\n\n    <div className={classes.text}>\n    <TextField \n          required\n          id=\"outlined-required\"\n          onChange={handleTitleChange}\n          value = {title}\n          helperText=\"Please enter your title\"\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleFirstNameChange}\n          value = {firstName}\n          helperText=\"Please enter your given name\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleMiddleNameChange}\n          value = {middleName}\n          helperText=\"Please enter your middle name\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleLastNameChange}\n          value = {lastName}\n          helperText=\"Please enter your family name/surname\"\n        />\n        </div>\n        <div className={classes.text}>\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleEmailChange}\n          value = {email}\n          helperText=\"Please enter your email\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          label = \"Password\"\n          onChange={handlePasswordChange}\n          value = {password}\n          helperText= {errorMessage === '' ? null :\n          <span style={{\n            fontWeight: 'bold',\n            color: 'red',\n          }}>{errorMessage}</span>}\n                \n          //onChange={(e) => validate(e.target.value)}\n        />\n      </div>\n\n      <div className={classes.text}>\n        \n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleInstitutionChange}\n          value = {institution}\n          helperText=\"Please enter your institutional affiliation\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleCityChange}\n          value = {city}\n          helperText=\"Please enter your city\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          onChange={handleStateChange}\n          value = {state}\n          helperText=\"Please enter your state/province\"\n        />\n         <TextField\n          onChange={handleCountryChange}\n          value = {country}\n          required\n          id=\"outlined-required\"\n          helperText=\"Please enter your country\"\n        />\n      </div>\n\n      <div className={classes.text}>\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Desired Locations</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personLocation}\n            onChange={handleLocationChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {locations.map((location) => (\n              <MenuItem\n                key={location}\n                value={location}\n                style={getStyles2(location, personLocation, theme)}\n              >\n                {location}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Time Period</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personTimePeriod}\n            onChange={handlePeriodChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {periods.map((time) => (\n              <MenuItem\n                key={time}\n                value={time}\n                style={getStyles3(time, personTimePeriod, theme)}\n              >\n                {time}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Your Method/Discipline</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personMethod}\n            onChange={handleMethodChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {methods.map((method) => (\n              <MenuItem\n                key={method}\n                value={method}\n                style={getStyles4(method, personMethod, theme)}\n              >\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Your Topic</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personTopic}\n            onChange={handleTopicChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {topics.map((topic) => (\n              <MenuItem\n                key={topic}\n                value={topic}\n                style={getStyles4(topic, personTopic, theme)}\n              >\n                {topic}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n  \n      </div>\n\n      <div className={classes.text}>\n        \n        <TextField\n          onChange={handleSocialMediaChange}\n          value = {socialMedia}\n          required\n          id=\"outlined-required\"\n          helperText=\"Please enter your social media handles\"\n        />\n\n        <TextField\n        onChange={handleWebsiteChange}\n        value = {website}\n        required\n        id=\"outlined-required\"\n        helperText=\"Please enter your website url\"\n        />\n\n        <TextField\n          id=\"outlined-select-location\"\n          select\n          value={media}\n          onChange={handleMediaChange}\n          helperText=\"Please select your media avaliability\"\n        >\n          {medias.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          id=\"outlined-select-location\"\n          select\n          value={discipline}\n          required\n          onChange={handleDegreeChange}\n          helperText=\"Please select your highest degree related to your work in Mormon Studies\"\n        >\n          {degrees.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Categories of Difference</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personCategory}\n            onChange={handleCategoriesOfDifferenceChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {categories_of_differences.map((category) => (\n              <MenuItem\n                key={category}\n                value={category}\n                style={getStyles(category, personCategory, theme)}\n              >\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n      </div>\n\n \n      <div className={classes.text2}>\n      <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={5}\n          onChange={handleBiographyChange}\n          value = {biography}\n          required\n          helperText=\"Please write a brief description of yourself and your work to help those looking for experts. \n          Feel free to include citations of relevant scholarly work, description of your research interests and current projects, and so on.\"\n        />\n      </div>\n      <ReCAPTCHA\n            sitekey=\"6LfI9hEjAAAAABd2TUPXCRH2YDPDGvy5w0rBgR8S\"\n            />\n\n      <Button\n              onClick={handleSubmit}\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white', width: 200, marginLeft: '40%', bgcolor: \"green\"}}\n            >\n              Register\n            </Button>\n    </Box>\n\n    </ThemeProvider>\n  );\n}\n\nexport default RegisterExpertDetail;\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/Home.js",["137"],[],"import React from \"react\";\n\nimport { Button } from \"@mui/material\";\nimport classes from './Home.module.css'\nimport WebImage from \"../componenet/WebImage\";\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\nexport default function Home(){\n    let navigate = useNavigate(); \n    const routeChange = () =>{ \n    let path = \"../search\"; \n    navigate(path);\n    }\n    return(\n \n            <div className={classes.parent}>\n                <h1 id=\"home_page\"></h1>\n                <div className={classes.child}>\n                    <WebImage alt=\"a decorative tree\"/>\n                </div>\n                \n                <p className = {classes.text} id=\"our mission\">Our mission is to promote the work of women \n                in Mormon Studies, a diverse group of experts that includes women of all racial/ethnic \n                identities, countries of origin and residence, sexual orientations, gender identities \n                and expressions, religious identities, academic backgrounds, and institutional contexts. \n                We connect scholars, researchers, and journalists with women Mormon Studies experts to \n                cite in articles and include in syllabi, events, and projects. We also provide resources \n                to help women in Mormon Studies amplify their voices in academic contexts as well as \n                traditional and new media venues.\n                <Stack direction=\"column\" spacing={2}>\n\n                <Button sx={{ color: '#008000', fontSize: 20, fontWeight: 'bold', marginTop: 10, marginLeft: 25, border: 2, borderColor: '#000000', width: '300px' }}\n                 onClick={routeChange}\n                > \n                FIND AN EXPERT! </Button>\n\n                <p className = {classes.text2}> \n                Visitors are encouraged to register as Experts or Users. Registering as an Expert will allow a user to have their information displayed in the \"Find an Expert\" section. \n                Users will be able to save their preferred searches and will be notified whenever an Expert that matches their preferences registers. \n                </p>\n                \n                </Stack>\n\n                </p>\n\n           \n                \n            </div>\n   \n        \n     \n    )\n}","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/RegisterUserDetail.js",["138","139","140","141","142","143","144","145","146"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport WebImage from '../componenet/WebImage';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport validator from 'validator'\nimport { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Theme, useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport classes from './RegisterUserDetail.module.css'\n\n\n\nconst theme = createTheme({palette:\n    {\n        primary:{main:\"#008000\"},\n        // secondary:{main:\"yellow\"}\n    },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nfunction getStyles(category, personCategory, theme) {\n  return {\n    fontWeight:\n      personCategory.indexOf(category) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles2(location, personLocation, theme) {\n  return {\n    fontWeight:\n      personLocation.indexOf(location) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles3(time, personTimePeriod, theme) {\n  return {\n    fontWeight:\n      personTimePeriod.indexOf(time) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction getStyles4(time, personTimePeriod, theme) {\n  return {\n    fontWeight:\n      personTimePeriod.indexOf(time) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\n\nconst locations = [\n  'Asia',\n  'Australia and/or New Zealand',\n  'Pacific Islands',\n  'Europe',\n  'United States and/or Canada',\n  'Latin America and/or Caribbean',\n  'Middle East',\n  'N/A',\n];\n\n\nconst periods = [\n  '19th Century',\n  '20th Century',\n  '21st Century',\n  'N/A',\n];\n\nconst topics = [\n  'Aesthetics',\n  'Anti-Mormonism',\n  'Biography',\n  'Childhood/Youth',\n  'Church Membership',\n  'Church of Jesus Christ of Latter-day Saints',\n  'Colonialism/imperialism',\n  'Community of Christ (formerly Reorganized Church of Jesus Christ of Latter Day Saints)',\n  'Critical Race Studies',\n  'Creative Writing (Fiction/Nonfiction/Poetry/etc.)',\n  'Cultural History',\n  'Demography',\n  'Disability Studies',\n  'Drama',\n  'Ecclesiology',\n  'Economics',\n  'Ethics',\n  'Family structure',\n  'Film',\n  'Folklore/Storytelling',\n  'Food',\n  'Gender/Femininity/Masculinity/Sexuality',\n  'Globalization',\n  'Healing',\n  'Interfaith/Interreligious Relations/Dialogue',\n  'Literature',\n  'Material Culture',\n  'Missions/Missiology',\n  'Motherhood',\n  'Music',\n  'Other Mormon Traditions (AUB/Bickertonite/FLDS/Strangite/etc.)',\n  'Performance',\n  'Philosophy',\n  'Psychology',\n  'Politics/Political Issues/Political Engagement',\n  'Popular Culture',\n  'Race/Ethnicity',\n  'Ritual Studies',\n  'Sacred Space',\n  'Scripture',\n  'Social History',\n  'Social Justice',\n  'Sociology of Religion',\n  'Technical Communication',\n  'Temples',\n  'Theology',\n  'Translation',\n  'Visual Culture',\n  'Womens History',\n  'N/A',\n];\n\nconst methods = [\n  'Anthropology',\n  'Area Studies',\n  'Art History',\n  'Creative Writing',\n  'Disability Studies',\n  'Economics',\n  'Ethnography',\n  'Ethnohistory',\n  'Gender Studies',\n  'Genealogy',\n  'Geography',\n  'History',\n  'Linguistics',\n  'Literary Criticism',\n  'Oral History',\n  'Performance Studies',\n  'Philosophy',\n  'Political Science',\n  'Psychology',\n  'Public History',\n  'Religious Studies',\n  'Rhetoric/Communication',\n  'Sociology',\n  'Statistics',\n  'Theology',\n  'N/A',\n];\n\nexport default function RegisterUserDetail() {\n\n  const handleSubmit = (event) => {\n    const requestOptions = { \n      method:'POST',\n      body: JSON.stringify(myJSON),\n      headers: {\n        'Content-Type': 'application/json'\n    },\n    }; \n    fetch(\"https://womenmormonstudies-server.herokuapp.com/api/Users/\", requestOptions)\n    .then((response)=> {\n      return response.json();\n    }).then((result) => {\n      console.log(result);\n    })\n  };\n\n  const [firstName, setFirstName] = React.useState();\n\n  const handleFirstNameChange = (event) => {\n      setFirstName(event.target.value);\n  };\n\n  const [lastName, setLastName] = React.useState();\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const [email, setEmail] = React.useState();\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const [state, setState] = React.useState({\n    yes: false,\n    no: false ,\n  });\n\n  const [errorMessage, setErrorMessage] = useState('')\n \n  const validate = (value) => {\n    if (validator.isStrongPassword(value, {\n      minLength: 8, minLowercase: 1,\n      minUppercase: 1, minNumbers: 1, minSymbols: 1\n    })) {\n      setErrorMessage('This is a strong password')\n    } else {\n      setErrorMessage('This is not a strong password')\n    }\n  }\n\n  const [password, setPassword] = React.useState();\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n    validate(event.target.value)\n  };\n\n  const handleChange2 = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const [location, setLocation] = React.useState();\n    const [personLocation, setPersonLocation] = React.useState([]);\n  \n    const handleLocationChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonLocation(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setLocation(event.target.value);\n    }; \n\n    const [method, setMethod] = React.useState();\n    const [personMethod, setPersonMethod] = React.useState([]);\n\n    const handleMethodChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonMethod(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setMethod(event.target.value);\n        };\n\n    const [period, setPeriod] = React.useState();\n    const [personTimePeriod, setPersonTimePeriod] = React.useState([]);\n\n    const handlePeriodChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonTimePeriod(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setPeriod(event.target.value);\n    };\n\n    const [topic, setTopic] = React.useState();\n    const [personTopic, setPersonTopic] = React.useState([]);\n\n    const handleTopicChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setPersonTopic(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n      setTopic(event.target.value);\n    };\n\n  const [biography, setBiography] = React.useState();\n\n  const handleBiographyChange = (event) => {\n    setBiography(event.target.value);\n  };\n\n  var myJSON = {\"email\": email, \"first_name\": firstName,\"last_name\": lastName, \"password\": password, \"searches\": {\"location\": location, \"time\": period, \"method\": method, \"topic\": topic, \"extra\": biography}}\n  console.log(myJSON)\n\n\n  return (\n    <ThemeProvider theme={theme}>\n\n     \n      <Typography component=\"h1\" variant=\"h5\" sx={{ mt: 3, mb: 2 ,color: 'black', width: 200, marginLeft: '40%'}}>\n          <WebImage alt=\"a decorative tree\"/>\n          </Typography>\n\n          <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n    >\n          <div className = {classes.text}>\n\n        <p className = {classes.text3}> \n        In order to register, please fill in the fields below. Feel free to enter N/A if a field doesn't apply. You will be able to sign-in after. \n        </p>\n        <TextField\n       \n          required\n          id=\"outlined-required\"\n          label=\"Required\"\n          onChange={handleFirstNameChange}\n          value = {firstName}\n          helperText=\"Please enter your first name\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Required\"\n          onChange={handleLastNameChange}\n          value = {lastName}\n          helperText=\"Please enter your last name\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Required\"\n          onChange={handleEmailChange}\n          value = {email}\n          helperText=\"Please enter your email\"\n        />\n\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Password (Required)\"\n          onChange={handlePasswordChange}\n          value = {password}\n          helperText= {errorMessage === '' ? null :\n          <span style={{\n            fontWeight: 'bold',\n            color: 'red',\n          }}>{errorMessage}</span>}\n          // onChange={(e) => validate(e.target.value)}\n        />\n      </div>\n\n      <p className = {classes.text} id=\"our mission\">Selecting the boxes will allow you to generate an email to notify you if a new expert \n      registers who fits your search criteria. You can uncheck these boxes at any time simply by signing in and editing your user profile.\n      </p>\n\n        <div className = {classes.text}>\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Desired Locations</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personLocation}\n            onChange={handleLocationChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {locations.map((location) => (\n              <MenuItem\n                key={location}\n                value={location}\n                style={getStyles2(location, personLocation, theme)}\n              >\n                {location}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Time Period</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personTimePeriod}\n            onChange={handlePeriodChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {periods.map((time) => (\n              <MenuItem\n                key={time}\n                value={time}\n                style={getStyles3(time, personTimePeriod, theme)}\n              >\n                {time}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Your Method/Discipline</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personMethod}\n            onChange={handleMethodChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {methods.map((method) => (\n              <MenuItem\n                key={method}\n                value={method}\n                style={getStyles4(method, personMethod, theme)}\n              >\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ m: 1, width: 250 }}>\n          <InputLabel id=\"demo-multiple-chip-label\">Select Your Topic</InputLabel>\n          <Select\n            labelId=\"demo-multiple-chip-label\"\n            id=\"demo-multiple-chip\"\n            multiple\n            value={personTopic}\n            onChange={handleTopicChange}\n            input={<OutlinedInput id=\"select-multiple-chip\" label= \"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {topics.map((topic) => (\n              <MenuItem\n                key={topic}\n                value={topic}\n                style={getStyles4(topic, personTopic, theme)}\n              >\n                {topic}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        \n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={5}\n          onChange={handleBiographyChange}\n          value = {biography}\n          required\n          helperText=\"Type in any additional topics that you are interested separated by commas in here\"\n        />\n      </div>\n\n    </Box>\n      <Button\n              onClick={handleSubmit}\n              type=\"submit\"\n              \n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 ,color: 'white', width: 200, marginLeft: '42%'}}\n            >\n              Register\n            </Button>\n\n    </ThemeProvider>\n  );\n}\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/pages/ExpertEdit.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],[],"/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CategoryBox3.js",["175","176","177","178","179","180"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Box from '@mui/material/Box';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      \n      width: 300,\n    },\n  },\n};\n\nfunction getStyles(method, approach, theme) {\n  return {\n    fontWeight:\n      approach.indexOf(method) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function CatagoryBox() {\n    const [age, setAge] = React.useState('');\n    const handleChange = (event) => {\n    setAge(event.target.value);\n    }\n\n\n  return (\n    <Box sx={{ minWidth: 60 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Method/Approach</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={age}\n          label=\"Method/Approach\"\n          onChange={handleChange}\n        >\n          <MenuItem value={'Anthropology'}>Anthropology</MenuItem>\n          <MenuItem value={'Area Studies'}>Area Studies</MenuItem>\n          <MenuItem value={'Art History'}>Art History</MenuItem>\n          <MenuItem value={'Creative Writing'}>Creative Writing</MenuItem>\n          <MenuItem value={'Disability Studies'}>Disability Studies</MenuItem>\n          <MenuItem value={'Economics'}>Economics</MenuItem>\n          <MenuItem value={'Ethnography'}>Ethnography</MenuItem>\n          <MenuItem value={'Ethnohistory'}>Ethnohistory</MenuItem>\n          <MenuItem value={'Gender Studies'}>Gender Studies</MenuItem>\n          <MenuItem value={'Genealogy'}>Genealogy</MenuItem>\n          <MenuItem value={'Geography'}>Geography</MenuItem>\n          <MenuItem value={'History'}>History</MenuItem>\n          <MenuItem value={'Linguistics'}>Linguistics</MenuItem>\n          <MenuItem value={'Literary Criticism'}>Literary Criticism</MenuItem>\n          <MenuItem value={'Oral History'}>Oral History</MenuItem>\n          <MenuItem value={'Performance Studies'}>Performance Studies</MenuItem>\n          <MenuItem value={'Philosophy'}>Philosophy</MenuItem>\n          <MenuItem value={'Political Science'}>Political Science</MenuItem>\n          <MenuItem value={'Psychology'}>Psychology</MenuItem>\n          <MenuItem value={'Public History'}>Public History</MenuItem>\n          <MenuItem value={'Religious Studies'}>Religious Studies</MenuItem>\n          <MenuItem value={'Rhetoric/Communication'}>Rhetoric/Communication</MenuItem>\n          <MenuItem value={'Sociology'}>Sociology</MenuItem>\n          <MenuItem value={'Statistics'}>Statistics</MenuItem>\n          <MenuItem value={'Theology'}>Theology</MenuItem>\n          <MenuItem value={'N/A'}>N/A</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CategoryBox2.js",["181","182","183","184","185","186"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Box from '@mui/material/Box';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      \n      width: 300,\n    },\n  },\n};\n\nfunction getStyles(method, approach, theme) {\n  return {\n    fontWeight:\n      approach.indexOf(method) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function CatagoryBox2() {\n    const [age, setAge] = React.useState('');\n    const handleChange = (event) => {\n    setAge(event.target.value);\n    }\n\n\n  return (\n    <Box sx={{ minWidth: 60 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Geographic Focus</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={age}\n          label=\"Geographic Focus\"\n          onChange={handleChange}\n        >\n          <MenuItem value={'Africa'}>Africa</MenuItem>\n          <MenuItem value={'Asia'}>Asia</MenuItem>\n          <MenuItem value={'Australia and/or New Zealand'}>Australia and/or New Zealand</MenuItem>\n          <MenuItem value={'Pacific Islands'}>Pacific Islands</MenuItem>\n          <MenuItem value={'Europe'}>Europe</MenuItem>\n          <MenuItem value={'United States and/or Canada'}>United States and/or Canada</MenuItem>\n          <MenuItem value={'Latin America and/or Caribbean'}>Latin America and/or Caribbean</MenuItem>\n          <MenuItem value={'Middle East'}>Middle East</MenuItem>\n          <MenuItem value={'N/A'}>N/A</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n  };\n","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/WebImage.js",["187"],[],"import woman from \"./Women.png\"\n\nexport default function WebImage(){\n    return (\n        <img src ={woman}/>\n    )\n}","/Users/zamankhan/Desktop/Coding Proj/WomenMormonStudies4/client/src/componenet/CatagoryBox.js",[],[],{"ruleId":"188","severity":1,"message":"189","line":7,"column":3,"nodeType":"190","messageId":"191","endLine":7,"endColumn":12},{"ruleId":"188","severity":1,"message":"192","line":22,"column":8,"nodeType":"190","messageId":"191","endLine":22,"endColumn":23},{"ruleId":"188","severity":1,"message":"193","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":15},{"ruleId":"188","severity":1,"message":"194","line":29,"column":7,"nodeType":"190","messageId":"191","endLine":29,"endColumn":14},{"ruleId":"188","severity":1,"message":"195","line":30,"column":9,"nodeType":"190","messageId":"191","endLine":30,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":30,"column":16,"nodeType":"198","messageId":"199","endLine":30,"endColumn":24,"fix":"200"},{"ruleId":"201","severity":1,"message":"202","line":49,"column":31,"nodeType":"203","messageId":"204","endLine":49,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":49,"column":64,"nodeType":"203","messageId":"204","endLine":49,"endColumn":66},{"ruleId":"201","severity":1,"message":"202","line":51,"column":33,"nodeType":"203","messageId":"204","endLine":51,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":84,"column":31,"nodeType":"203","messageId":"204","endLine":84,"endColumn":33},{"ruleId":"188","severity":1,"message":"205","line":2,"column":27,"nodeType":"190","messageId":"191","endLine":2,"endColumn":31},{"ruleId":"188","severity":1,"message":"206","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"207","line":14,"column":13,"nodeType":"190","messageId":"191","endLine":14,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":25,"column":33,"nodeType":"203","messageId":"204","endLine":25,"endColumn":35},{"ruleId":"201","severity":1,"message":"208","line":35,"column":26,"nodeType":"203","messageId":"204","endLine":35,"endColumn":28},{"ruleId":"188","severity":1,"message":"209","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":25},{"ruleId":"201","severity":1,"message":"208","line":50,"column":47,"nodeType":"203","messageId":"204","endLine":50,"endColumn":49},{"ruleId":"201","severity":1,"message":"208","line":54,"column":47,"nodeType":"203","messageId":"204","endLine":54,"endColumn":49},{"ruleId":"201","severity":1,"message":"208","line":58,"column":33,"nodeType":"203","messageId":"204","endLine":58,"endColumn":35},{"ruleId":"201","severity":1,"message":"208","line":63,"column":27,"nodeType":"203","messageId":"204","endLine":63,"endColumn":29},{"ruleId":"201","severity":1,"message":"208","line":65,"column":30,"nodeType":"203","messageId":"204","endLine":65,"endColumn":32},{"ruleId":"201","severity":1,"message":"208","line":67,"column":32,"nodeType":"203","messageId":"204","endLine":67,"endColumn":34},{"ruleId":"201","severity":1,"message":"208","line":72,"column":42,"nodeType":"203","messageId":"204","endLine":72,"endColumn":44},{"ruleId":"201","severity":1,"message":"208","line":75,"column":58,"nodeType":"203","messageId":"204","endLine":75,"endColumn":60},{"ruleId":"201","severity":1,"message":"208","line":77,"column":43,"nodeType":"203","messageId":"204","endLine":77,"endColumn":45},{"ruleId":"201","severity":1,"message":"208","line":81,"column":28,"nodeType":"203","messageId":"204","endLine":81,"endColumn":30},{"ruleId":"201","severity":1,"message":"208","line":84,"column":48,"nodeType":"203","messageId":"204","endLine":84,"endColumn":50},{"ruleId":"201","severity":1,"message":"202","line":150,"column":31,"nodeType":"203","messageId":"204","endLine":150,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":155,"column":31,"nodeType":"203","messageId":"204","endLine":155,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":160,"column":31,"nodeType":"203","messageId":"204","endLine":160,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":165,"column":31,"nodeType":"203","messageId":"204","endLine":165,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":170,"column":31,"nodeType":"203","messageId":"204","endLine":170,"endColumn":33},{"ruleId":"188","severity":1,"message":"210","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":21},{"ruleId":"188","severity":1,"message":"211","line":12,"column":18,"nodeType":"190","messageId":"191","endLine":12,"endColumn":35},{"ruleId":"188","severity":1,"message":"212","line":16,"column":10,"nodeType":"190","messageId":"191","endLine":16,"endColumn":15},{"ruleId":"188","severity":1,"message":"213","line":19,"column":8,"nodeType":"190","messageId":"191","endLine":19,"endColumn":15},{"ruleId":"188","severity":1,"message":"214","line":248,"column":9,"nodeType":"190","messageId":"191","endLine":248,"endColumn":13},{"ruleId":"188","severity":1,"message":"215","line":391,"column":24,"nodeType":"190","messageId":"191","endLine":391,"endColumn":37},{"ruleId":"188","severity":1,"message":"216","line":394,"column":12,"nodeType":"190","messageId":"191","endLine":394,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":21,"column":17,"nodeType":"219","endLine":21,"endColumn":36},{"ruleId":"188","severity":1,"message":"220","line":7,"column":8,"nodeType":"190","messageId":"191","endLine":7,"endColumn":17},{"ruleId":"188","severity":1,"message":"221","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":24},{"ruleId":"188","severity":1,"message":"222","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":14},{"ruleId":"188","severity":1,"message":"223","line":14,"column":8,"nodeType":"190","messageId":"191","endLine":14,"endColumn":16},{"ruleId":"188","severity":1,"message":"212","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":15},{"ruleId":"188","severity":1,"message":"224","line":15,"column":17,"nodeType":"190","messageId":"191","endLine":15,"endColumn":25},{"ruleId":"188","severity":1,"message":"211","line":19,"column":18,"nodeType":"190","messageId":"191","endLine":19,"endColumn":35},{"ruleId":"188","severity":1,"message":"225","line":44,"column":10,"nodeType":"190","messageId":"191","endLine":44,"endColumn":19},{"ruleId":"188","severity":1,"message":"226","line":244,"column":9,"nodeType":"190","messageId":"191","endLine":244,"endColumn":22},{"ruleId":"188","severity":1,"message":"227","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"228","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":22},{"ruleId":"188","severity":1,"message":"229","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":17},{"ruleId":"188","severity":1,"message":"210","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":21},{"ruleId":"188","severity":1,"message":"230","line":12,"column":8,"nodeType":"190","messageId":"191","endLine":12,"endColumn":19},{"ruleId":"188","severity":1,"message":"231","line":14,"column":8,"nodeType":"190","messageId":"191","endLine":14,"endColumn":20},{"ruleId":"188","severity":1,"message":"232","line":15,"column":8,"nodeType":"190","messageId":"191","endLine":15,"endColumn":20},{"ruleId":"188","severity":1,"message":"233","line":16,"column":10,"nodeType":"190","messageId":"191","endLine":16,"endColumn":21},{"ruleId":"188","severity":1,"message":"234","line":17,"column":10,"nodeType":"190","messageId":"191","endLine":17,"endColumn":19},{"ruleId":"188","severity":1,"message":"205","line":18,"column":10,"nodeType":"190","messageId":"191","endLine":18,"endColumn":14},{"ruleId":"188","severity":1,"message":"235","line":19,"column":8,"nodeType":"190","messageId":"191","endLine":19,"endColumn":14},{"ruleId":"188","severity":1,"message":"236","line":21,"column":20,"nodeType":"190","messageId":"191","endLine":21,"endColumn":26},{"ruleId":"188","severity":1,"message":"237","line":22,"column":3,"nodeType":"190","messageId":"191","endLine":22,"endColumn":9},{"ruleId":"188","severity":1,"message":"238","line":23,"column":3,"nodeType":"190","messageId":"191","endLine":23,"endColumn":8},{"ruleId":"188","severity":1,"message":"239","line":25,"column":10,"nodeType":"190","messageId":"191","endLine":25,"endColumn":18},{"ruleId":"188","severity":1,"message":"211","line":27,"column":18,"nodeType":"190","messageId":"191","endLine":27,"endColumn":35},{"ruleId":"188","severity":1,"message":"212","line":31,"column":10,"nodeType":"190","messageId":"191","endLine":31,"endColumn":15},{"ruleId":"188","severity":1,"message":"213","line":34,"column":8,"nodeType":"190","messageId":"191","endLine":34,"endColumn":15},{"ruleId":"188","severity":1,"message":"240","line":263,"column":9,"nodeType":"190","messageId":"191","endLine":263,"endColumn":21},{"ruleId":"188","severity":1,"message":"241","line":281,"column":9,"nodeType":"190","messageId":"191","endLine":281,"endColumn":36},{"ruleId":"188","severity":1,"message":"242","line":301,"column":9,"nodeType":"190","messageId":"191","endLine":301,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":356,"column":31,"nodeType":"203","messageId":"204","endLine":356,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":360,"column":33,"nodeType":"203","messageId":"204","endLine":360,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":365,"column":23,"nodeType":"203","messageId":"204","endLine":365,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":366,"column":26,"nodeType":"203","messageId":"204","endLine":366,"endColumn":28},{"ruleId":"188","severity":1,"message":"215","line":502,"column":24,"nodeType":"190","messageId":"191","endLine":502,"endColumn":37},{"ruleId":"188","severity":1,"message":"216","line":505,"column":12,"nodeType":"190","messageId":"191","endLine":505,"endColumn":17},{"ruleId":"188","severity":1,"message":"243","line":539,"column":12,"nodeType":"190","messageId":"191","endLine":539,"endColumn":24},{"ruleId":"188","severity":1,"message":"224","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"244","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":21},{"ruleId":"188","severity":1,"message":"245","line":10,"column":7,"nodeType":"190","messageId":"191","endLine":10,"endColumn":18},{"ruleId":"188","severity":1,"message":"246","line":11,"column":7,"nodeType":"190","messageId":"191","endLine":11,"endColumn":23},{"ruleId":"188","severity":1,"message":"247","line":12,"column":7,"nodeType":"190","messageId":"191","endLine":12,"endColumn":16},{"ruleId":"188","severity":1,"message":"225","line":21,"column":10,"nodeType":"190","messageId":"191","endLine":21,"endColumn":19},{"ruleId":"188","severity":1,"message":"224","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"244","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":21},{"ruleId":"188","severity":1,"message":"245","line":10,"column":7,"nodeType":"190","messageId":"191","endLine":10,"endColumn":18},{"ruleId":"188","severity":1,"message":"246","line":11,"column":7,"nodeType":"190","messageId":"191","endLine":11,"endColumn":23},{"ruleId":"188","severity":1,"message":"247","line":12,"column":7,"nodeType":"190","messageId":"191","endLine":12,"endColumn":16},{"ruleId":"188","severity":1,"message":"225","line":21,"column":10,"nodeType":"190","messageId":"191","endLine":21,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":5,"column":9,"nodeType":"219","endLine":5,"endColumn":28},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'PersonSharpIcon' is defined but never used.","'Email' is defined but never used.","'request' is assigned a value but never used.","'date' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"250","text":"251"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'json' is defined but never used.","'found' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useSearchParams' is defined but never used.","'createTheme' is defined but never used.","'SelectChangeEvent' is defined but never used.","'Theme' is defined but never used.","'emailjs' is defined but never used.","'form' is assigned a value but never used.","'setDiscipline' is assigned a value but never used.","'topic' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Checkbox' is defined but never used.","'useTheme' is defined but never used.","'getStyles' is defined but never used.","'handleChange2' is assigned a value but never used.","'DataGrid' is defined but never used.","'confirmAlert' is defined but never used.","'Container' is defined but never used.","'CatagoryBox' is defined but never used.","'CatagoryBox2' is defined but never used.","'CatagoryBox3' is defined but never used.","'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'Expert' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Fragment' is defined but never used.","'handleSubmit' is assigned a value but never used.","'onButtonClickUnconfirmedAdd' is assigned a value but never used.","'DeleteExpert' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'OutlinedInput' is defined but never used.","'ITEM_HEIGHT' is assigned a value but never used.","'ITEM_PADDING_TOP' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[829,829],"()"]